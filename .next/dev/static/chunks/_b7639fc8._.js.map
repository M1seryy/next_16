{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/victorhachkajlo/Desktop/new-project/src/app/modules/home/home.module.tsx"],"sourcesContent":["'use client'\n\nimport { useTranslations } from 'next-intl'\nimport { type FC, useState } from 'react'\n\nimport { BooksListBlockComponent, SearchFormBlockComponent } from '@/app/features/block'\nimport { BannerComponent } from '@/app/shared/ui'\n\n// interface\ninterface IProps {\n  searchQuery?: string\n}\n\n// component\nconst HomeModule: FC<Readonly<IProps>> = (props) => {\n  const { searchQuery: initialSearchQuery = '' } = props\n  const [searchQuery, setSearchQuery] = useState(initialSearchQuery)\n\n  const t = useTranslations()\n\n  const handleSearch = (query: string) => {\n    setSearchQuery(query)\n  }\n\n  // return\n  return (\n    <div className='space-y-6'>\n      <div>\n        <BannerComponent />\n        <h1 className='text-2xl font-bold'>{t('home.title')}</h1>\n        <p>{t('home.subtitle')}</p>\n      </div>\n\n      <div className='flex justify-center'>\n        <SearchFormBlockComponent onSearch={handleSearch} initialValue={searchQuery} />\n      </div>\n\n      <BooksListBlockComponent searchQuery={searchQuery} />\n    </div>\n  )\n}\n\nexport default HomeModule\n"],"names":["c","_c","useTranslations","FC","useState","BooksListBlockComponent","SearchFormBlockComponent","BannerComponent","IProps","searchQuery","HomeModule","Readonly","props","$","$i","Symbol","for","t0","initialSearchQuery","undefined","setSearchQuery","t","t1","query","handleSearch","t2","t3","t4","t5","t6","t7","t8","t9","t10"],"mappings":"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","ignoreList":[],"debugId":null}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["file:///Users/victorhachkajlo/Desktop/new-project/node_modules/%40tanstack/react-query/src/HydrationBoundary.tsx"],"sourcesContent":["'use client'\nimport * as React from 'react'\n\nimport { hydrate } from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport type {\n  DehydratedState,\n  HydrateOptions,\n  OmitKeyof,\n  QueryClient,\n} from '@tanstack/query-core'\n\nexport interface HydrationBoundaryProps {\n  state: DehydratedState | null | undefined\n  options?: OmitKeyof<HydrateOptions, 'defaultOptions'> & {\n    defaultOptions?: OmitKeyof<\n      Exclude<HydrateOptions['defaultOptions'], undefined>,\n      'mutations'\n    >\n  }\n  children?: React.ReactNode\n  queryClient?: QueryClient\n}\n\nexport const HydrationBoundary = ({\n  children,\n  options = {},\n  state,\n  queryClient,\n}: HydrationBoundaryProps) => {\n  const client = useQueryClient(queryClient)\n\n  const optionsRef = React.useRef(options)\n  React.useEffect(() => {\n    optionsRef.current = options\n  })\n\n  // This useMemo is for performance reasons only, everything inside it must\n  // be safe to run in every render and code here should be read as \"in render\".\n  //\n  // This code needs to happen during the render phase, because after initial\n  // SSR, hydration needs to happen _before_ children render. Also, if hydrating\n  // during a transition, we want to hydrate as much as is safe in render so\n  // we can prerender as much as possible.\n  //\n  // For any queries that already exist in the cache, we want to hold back on\n  // hydrating until _after_ the render phase. The reason for this is that during\n  // transitions, we don't want the existing queries and observers to update to\n  // the new data on the current page, only _after_ the transition is committed.\n  // If the transition is aborted, we will have hydrated any _new_ queries, but\n  // we throw away the fresh data for any existing ones to avoid unexpectedly\n  // updating the UI.\n  const hydrationQueue: DehydratedState['queries'] | undefined =\n    React.useMemo(() => {\n      if (state) {\n        if (typeof state !== 'object') {\n          return\n        }\n\n        const queryCache = client.getQueryCache()\n        // State is supplied from the outside and we might as well fail\n        // gracefully if it has the wrong shape, so while we type `queries`\n        // as required, we still provide a fallback.\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        const queries = state.queries || []\n\n        const newQueries: DehydratedState['queries'] = []\n        const existingQueries: DehydratedState['queries'] = []\n        for (const dehydratedQuery of queries) {\n          const existingQuery = queryCache.get(dehydratedQuery.queryHash)\n\n          if (!existingQuery) {\n            newQueries.push(dehydratedQuery)\n          } else {\n            const hydrationIsNewer =\n              dehydratedQuery.state.dataUpdatedAt >\n                existingQuery.state.dataUpdatedAt ||\n              (dehydratedQuery.promise &&\n                existingQuery.state.status !== 'pending' &&\n                existingQuery.state.fetchStatus !== 'fetching' &&\n                dehydratedQuery.dehydratedAt !== undefined &&\n                dehydratedQuery.dehydratedAt >\n                  existingQuery.state.dataUpdatedAt)\n\n            if (hydrationIsNewer) {\n              existingQueries.push(dehydratedQuery)\n            }\n          }\n        }\n\n        if (newQueries.length > 0) {\n          // It's actually fine to call this with queries/state that already exists\n          // in the cache, or is older. hydrate() is idempotent for queries.\n          // eslint-disable-next-line react-hooks/refs\n          hydrate(client, { queries: newQueries }, optionsRef.current)\n        }\n        if (existingQueries.length > 0) {\n          return existingQueries\n        }\n      }\n      return undefined\n    }, [client, state])\n\n  React.useEffect(() => {\n    if (hydrationQueue) {\n      hydrate(client, { queries: hydrationQueue }, optionsRef.current)\n    }\n  }, [client, hydrationQueue])\n\n  return children as React.ReactElement\n}\n"],"names":[],"mappings":";;;;;AACA,YAAY,WAAW;AAEvB,SAAS,eAAe;AACxB,SAAS,sBAAsB;;;;;AAoBxB,IAAM,oBAAoB,CAAC,EAChC,QAAA,EACA,UAAU,CAAC,CAAA,EACX,KAAA,EACA,WAAA,EACF,KAA8B;IAC5B,MAAM,aAAS,2MAAA,EAAe,WAAW;IAEzC,MAAM,aAAmB,uKAAA,CAAO,OAAO;IACjC,0KAAA;uCAAU,MAAM;YACpB,WAAW,OAAA,GAAU;QACvB,CAAC;;IAiBD,MAAM,iBACE,wKAAA;qDAAQ,MAAM;YAClB,IAAI,OAAO;gBACT,IAAI,OAAO,UAAU,UAAU;oBAC7B;gBACF;gBAEA,MAAM,aAAa,OAAO,aAAA,CAAc;gBAKxC,MAAM,UAAU,MAAM,OAAA,IAAW,CAAC,CAAA;gBAElC,MAAM,aAAyC,CAAC,CAAA;gBAChD,MAAM,kBAA8C,CAAC,CAAA;gBACrD,KAAA,MAAW,mBAAmB,QAAS;oBACrC,MAAM,gBAAgB,WAAW,GAAA,CAAI,gBAAgB,SAAS;oBAE9D,IAAI,CAAC,eAAe;wBAClB,WAAW,IAAA,CAAK,eAAe;oBACjC,OAAO;wBACL,MAAM,mBACJ,gBAAgB,KAAA,CAAM,aAAA,GACpB,cAAc,KAAA,CAAM,aAAA,IACrB,gBAAgB,OAAA,IACf,cAAc,KAAA,CAAM,MAAA,KAAW,aAC/B,cAAc,KAAA,CAAM,WAAA,KAAgB,cACpC,gBAAgB,YAAA,KAAiB,KAAA,KACjC,gBAAgB,YAAA,GACd,cAAc,KAAA,CAAM,aAAA;wBAE1B,IAAI,kBAAkB;4BACpB,gBAAgB,IAAA,CAAK,eAAe;wBACtC;oBACF;gBACF;gBAEA,IAAI,WAAW,MAAA,GAAS,GAAG;oBAIzB,IAAA,yLAAA,EAAQ,QAAQ;wBAAE,SAAS;oBAAW,GAAG,WAAW,OAAO;gBAC7D;gBACA,IAAI,gBAAgB,MAAA,GAAS,GAAG;oBAC9B,OAAO;gBACT;YACF;YACA,OAAO,KAAA;QACT;oDAAG;QAAC;QAAQ,KAAK;KAAC;IAEd,0KAAA;uCAAU,MAAM;YACpB,IAAI,gBAAgB;gBAClB,IAAA,yLAAA,EAAQ,QAAQ;oBAAE,SAAS;gBAAe,GAAG,WAAW,OAAO;YACjE;QACF;sCAAG;QAAC;QAAQ,cAAc;KAAC;IAE3B,OAAO;AACT","debugId":null}}]
}