{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/victorhachkajlo/Desktop/new-project/src/app/features/users/users-list/users-list.component.tsx"],"sourcesContent":["import { type FC } from 'react'\n\n// interface\ninterface IProps {\n  // no props needed\n}\n\n// utility function for consistent date formatting\nconst formatDate = (date: Date): string => {\n  return date.toISOString().split('T')[0] // Returns YYYY-MM-DD format\n}\n\n// component\nconst UsersListComponent: FC<Readonly<IProps>> = () => {\n  // Mock data for now\n  const users = [\n    { id: 1, name: 'John Doe', email: 'john@example.com', createdAt: new Date() },\n    { id: 2, name: 'Jane Smith', email: 'jane@example.com', createdAt: new Date() },\n  ]\n\n  // return\n  return (\n    <div className='space-y-4'>\n      <h2 className='text-xl font-semibold'>Users from Database</h2>\n\n      {users.length === 0 ? (\n        <p className='text-gray-500'>No users found</p>\n      ) : (\n        <div className='grid gap-4'>\n          {users.map((user) => (\n            <div key={user.id} className='rounded-lg border p-4'>\n              <h3 className='font-medium'>{user.name}</h3>\n              <p className='text-sm text-red-600'>{user.email}</p>\n              <p className='text-xs text-gray-400'>Created: {formatDate(new Date(user.createdAt))}</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default UsersListComponent\n"],"names":[],"mappings":";;;;;;AAOA,kDAAkD;AAClD,MAAM,aAAa,CAAC;IAClB,OAAO,KAAK,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,4BAA4B;;AACtE;AAEA,YAAY;AACZ,MAAM,qBAA2C;IAC/C,oBAAoB;IACpB,MAAM,QAAQ;QACZ;YAAE,IAAI;YAAG,MAAM;YAAY,OAAO;YAAoB,WAAW,IAAI;QAAO;QAC5E;YAAE,IAAI;YAAG,MAAM;YAAc,OAAO;YAAoB,WAAW,IAAI;QAAO;KAC/E;IAED,SAAS;IACT,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAwB;;;;;;YAErC,MAAM,MAAM,KAAK,kBAChB,8OAAC;gBAAE,WAAU;0BAAgB;;;;;yEAE7B,8OAAC;gBAAI,WAAU;0BACZ,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC;wBAAkB,WAAU;;0CAC3B,8OAAC;gCAAG,WAAU;0CAAe,KAAK,IAAI;;;;;;0CACtC,8OAAC;gCAAE,WAAU;0CAAwB,KAAK,KAAK;;;;;;0CAC/C,8OAAC;gCAAE,WAAU;;oCAAwB;oCAAU,WAAW,IAAI,KAAK,KAAK,SAAS;;;;;;;;uBAHzE,KAAK,EAAE;;;;;;;;;;;;;;;;AAU7B;uCAEe","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///Users/victorhachkajlo/Desktop/new-project/src/app/features/users/users-list/index.ts"],"sourcesContent":["export { default as UsersListComponent } from './users-list.component'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///Users/victorhachkajlo/Desktop/new-project/src/app/shared/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n    return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACtC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACxB","debugId":null}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file:///Users/victorhachkajlo/Desktop/new-project/src/app/shared/ui/components/card.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport { cn } from '@/app/shared/lib/utils'\n\nconst Card = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('bg-card text-card-foreground rounded-xl border shadow', className)} {...props} />\n))\nCard.displayName = 'Card'\n\nconst CardHeader = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn('flex flex-col space-y-1.5 p-6', className)} {...props} />\n  ),\n)\nCardHeader.displayName = 'CardHeader'\n\nconst CardTitle = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn('leading-none font-semibold tracking-tight', className)} {...props} />\n  ),\n)\nCardTitle.displayName = 'CardTitle'\n\nconst CardDescription = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn('text-muted-foreground text-sm', className)} {...props} />\n  ),\n)\nCardDescription.displayName = 'CardDescription'\n\nconst CardContent = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => <div ref={ref} className={cn('p-6 pt-0', className)} {...props} />,\n)\nCardContent.displayName = 'CardContent'\n\nconst CardFooter = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn('flex items-center p-6 pt-0', className)} {...props} />\n  ),\n)\nCardFooter.displayName = 'CardFooter'\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,mNAAgB,CAAuD,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5G,8OAAC;QAAI,KAAK;QAAK,WAAW,IAAA,0IAAE,EAAC,yDAAyD;QAAa,GAAG,KAAK;;;;;;AAE7G,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,mNAAgB,CACjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QAAI,KAAK;QAAK,WAAW,IAAA,0IAAE,EAAC,iCAAiC;QAAa,GAAG,KAAK;;;;;;AAGvF,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,mNAAgB,CAChC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QAAI,KAAK;QAAK,WAAW,IAAA,0IAAE,EAAC,6CAA6C;QAAa,GAAG,KAAK;;;;;;AAGnG,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,mNAAgB,CACtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QAAI,KAAK;QAAK,WAAW,IAAA,0IAAE,EAAC,iCAAiC;QAAa,GAAG,KAAK;;;;;;AAGvF,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,mNAAgB,CAClC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAAQ,8OAAC;QAAI,KAAK;QAAK,WAAW,IAAA,0IAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;AAElG,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,mNAAgB,CACjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QAAI,KAAK;QAAK,WAAW,IAAA,0IAAE,EAAC,8BAA8B;QAAa,GAAG,KAAK;;;;;;AAGpF,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["file:///Users/victorhachkajlo/Desktop/new-project/src/app/shared/ui/components/button.tsx"],"sourcesContent":["import * as React from 'react'\nimport { Slot } from '@radix-ui/react-slot'\nimport { cva, type VariantProps } from 'class-variance-authority'\n\nimport { cn } from '@/app/shared/lib/utils'\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n  {\n    variants: {\n      variant: {\n        default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n        destructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n        outline: 'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n        secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline',\n      },\n      size: {\n        default: 'h-10 px-4 py-2',\n        sm: 'h-9 rounded-md px-3',\n        lg: 'h-11 rounded-md px-8',\n        icon: 'h-10 w-10',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  },\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : 'button'\n    return <Comp className={cn(buttonVariants({ variant, size, className }))} ref={ref} {...props} />\n  },\n)\nButton.displayName = 'Button'\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,IAAA,uKAAG,EACxB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aAAa;YACb,SAAS;YACT,WAAW;YACX,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,mNAAgB,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,wKAAI,GAAG;IAC9B,qBAAO,8OAAC;QAAK,WAAW,IAAA,0IAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QAAK,KAAK;QAAM,GAAG,KAAK;;;;;;AAC/F;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"sources":["file:///Users/victorhachkajlo/Desktop/new-project/src/app/shared/ui/components/input.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport { cn } from '@/app/shared/lib/utils'\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<'input'>>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          'border-input file:text-foreground placeholder:text-muted-foreground focus-visible:ring-ring flex h-9 w-full rounded-md border bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium focus-visible:ring-1 focus-visible:outline-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className,\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  },\n)\nInput.displayName = 'Input'\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,mNAAgB,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,IAAA,0IAAE,EACX,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 310, "column": 0}, "map": {"version":3,"sources":["file:///Users/victorhachkajlo/Desktop/new-project/src/app/shared/ui/components/label.tsx"],"sourcesContent":["'use client'\n\nimport * as React from 'react'\nimport * as LabelPrimitive from '@radix-ui/react-label'\n\nimport { cn } from '@/app/shared/lib/utils'\n\nfunction Label({ className, ...props }: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot='label'\n      className={cn(\n        'flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50',\n        className,\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAyD;IACtF,qBACE,8OAAC,yKAAmB;QAClB,aAAU;QACV,WAAW,IAAA,0IAAE,EACX,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 337, "column": 0}, "map": {"version":3,"sources":["file:///Users/victorhachkajlo/Desktop/new-project/src/app/shared/ui/components/form.tsx"],"sourcesContent":["'use client'\n\nimport * as React from 'react'\nimport * as LabelPrimitive from '@radix-ui/react-label'\nimport { Slot } from '@radix-ui/react-slot'\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from 'react-hook-form'\n\nimport { cn } from '@/app/shared/lib/utils'\nimport { Label } from './label'\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue | null>(null)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  if (!fieldContext) {\n    throw new Error('useFormField should be used within <FormField>')\n  }\n\n  if (!itemContext) {\n    throw new Error('useFormField should be used within <FormItem>')\n  }\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue | null>(null)\n\nconst FormItem = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => {\n    const id = React.useId()\n\n    return (\n      <FormItemContext.Provider value={{ id }}>\n        <div ref={ref} className={cn('space-y-2', className)} {...props} />\n      </FormItemContext.Provider>\n    )\n  },\n)\nFormItem.displayName = 'FormItem'\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return <Label ref={ref} className={cn(error && 'text-destructive', className)} htmlFor={formItemId} {...props} />\n})\nFormLabel.displayName = 'FormLabel'\n\nconst FormControl = React.forwardRef<React.ElementRef<typeof Slot>, React.ComponentPropsWithoutRef<typeof Slot>>(\n  ({ ...props }, ref) => {\n    const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n    return (\n      <Slot\n        ref={ref}\n        id={formItemId}\n        aria-describedby={!error ? `${formDescriptionId}` : `${formDescriptionId} ${formMessageId}`}\n        aria-invalid={!!error}\n        {...props}\n      />\n    )\n  },\n)\nFormControl.displayName = 'FormControl'\n\nconst FormDescription = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(\n  ({ className, ...props }, ref) => {\n    const { formDescriptionId } = useFormField()\n\n    return (\n      <p ref={ref} id={formDescriptionId} className={cn('text-muted-foreground text-[0.8rem]', className)} {...props} />\n    )\n  },\n)\nFormDescription.displayName = 'FormDescription'\n\nconst FormMessage = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(\n  ({ className, children, ...props }, ref) => {\n    const { error, formMessageId } = useFormField()\n    const body = error ? String(error?.message ?? '') : children\n\n    if (!body) {\n      return null\n    }\n\n    return (\n      <p\n        ref={ref}\n        id={formMessageId}\n        className={cn('text-destructive text-[0.8rem] font-medium', className)}\n        {...props}\n      >\n        {body}\n      </p>\n    )\n  },\n)\nFormMessage.displayName = 'FormMessage'\n\nexport { useFormField, Form, FormItem, FormLabel, FormControl, FormDescription, FormMessage, FormField }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 499, "column": 0}, "map": {"version":3,"sources":["file:///Users/victorhachkajlo/Desktop/new-project/src/app/shared/ui/index.ts"],"sourcesContent":["// UI components exports\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent } from './components/card'\nexport { Button } from './components/button'\nexport { Input } from './components/input'\nexport { Label } from './components/label'\nexport { useFormField, Form, FormItem, FormLabel, FormControl, FormDescription, FormMessage, FormField } from './components/form'\n"],"names":[],"mappings":"AAAA,wBAAwB;;AACxB;AACA;AACA;AACA;AACA","debugId":null}},
    {"offset": {"line": 515, "column": 0}, "map": {"version":3,"sources":["file:///Users/victorhachkajlo/Desktop/new-project/src/app/features/search/search-form/search-form.component.tsx"],"sourcesContent":["'use client'\n\nimport { type FC } from 'react'\nimport { useTranslations } from 'next-intl'\nimport { useForm } from 'react-hook-form'\nimport { Button } from '@/app/shared/ui'\nimport { Input } from '@/app/shared/ui'\nimport { Form, FormControl, FormField, FormItem, FormMessage } from '@/app/shared/ui'\n\n// interface\ninterface IProps {\n  onSearch: (query: string) => void\n  initialValue?: string\n}\n\ninterface SearchFormData {\n  query: string\n}\n\n// component\nconst SearchFormComponent: FC<Readonly<IProps>> = (props) => {\n  const { onSearch, initialValue = '' } = props\n\n  const t = useTranslations()\n\n  const form = useForm<SearchFormData>({\n    defaultValues: {\n      query: initialValue,\n    },\n  })\n\n  const onSubmit = (data: SearchFormData) => {\n    onSearch(data.query)\n  }\n\n  // return\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className='w-full max-w-md'>\n        <div className='flex gap-2'>\n          <FormField\n            control={form.control}\n            name='query'\n            rules={{\n              required: 'Search query is required',\n              minLength: { value: 1, message: 'Query too short' },\n              maxLength: { value: 100, message: 'Query too long' },\n            }}\n            render={({ field }) => (\n              <FormItem className='flex-1'>\n                <FormControl>\n                  <Input {...field} placeholder={t('Search.placeholder')} className='w-full' />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <Button type='submit' disabled={form.formState.isSubmitting} className='shrink-0'>\n            {form.formState.isSubmitting ? t('Search.searching') : t('Search.button')}\n          </Button>\n        </div>\n      </form>\n    </Form>\n  )\n}\n\nexport default SearchFormComponent\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AAAA;AACA;AACA;AAPA;;;;;;;AAmBA,YAAY;AACZ,MAAM,sBAA4C,CAAC;IACjD,MAAM,EAAE,QAAQ,EAAE,eAAe,EAAE,EAAE,GAAG;IAExC,MAAM,IAAI,IAAA,yNAAe;IAEzB,MAAM,OAAO,IAAA,yKAAO,EAAiB;QACnC,eAAe;YACb,OAAO;QACT;IACF;IAEA,MAAM,WAAW,CAAC;QAChB,SAAS,KAAK,KAAK;IACrB;IAEA,SAAS;IACT,qBACE,8OAAC,yJAAI;QAAE,GAAG,IAAI;kBACZ,cAAA,8OAAC;YAAK,UAAU,KAAK,YAAY,CAAC;YAAW,WAAU;sBACrD,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,8JAAS;wBACR,SAAS,KAAK,OAAO;wBACrB,MAAK;wBACL,OAAO;4BACL,UAAU;4BACV,WAAW;gCAAE,OAAO;gCAAG,SAAS;4BAAkB;4BAClD,WAAW;gCAAE,OAAO;gCAAK,SAAS;4BAAiB;wBACrD;wBACA,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,6JAAQ;gCAAC,WAAU;;kDAClB,8OAAC,gKAAW;kDACV,cAAA,8OAAC,2JAAK;4CAAE,GAAG,KAAK;4CAAE,aAAa,EAAE;4CAAuB,WAAU;;;;;;;;;;;kDAEpE,8OAAC,gKAAW;;;;;;;;;;;;;;;;kCAKlB,8OAAC,6JAAM;wBAAC,MAAK;wBAAS,UAAU,KAAK,SAAS,CAAC,YAAY;wBAAE,WAAU;kCACpE,KAAK,SAAS,CAAC,YAAY,GAAG,EAAE,sBAAsB,EAAE;;;;;;;;;;;;;;;;;;;;;;AAMrE;uCAEe","debugId":null}},
    {"offset": {"line": 634, "column": 0}, "map": {"version":3,"sources":["file:///Users/victorhachkajlo/Desktop/new-project/src/app/features/search/search-form/index.ts"],"sourcesContent":["export { default as SearchFormComponent } from './search-form.component'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 641, "column": 0}, "map": {"version":3,"sources":["file:///Users/victorhachkajlo/Desktop/new-project/src/app/features/search/index.ts"],"sourcesContent":["export { SearchFormComponent } from './search-form'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 657, "column": 0}, "map": {"version":3,"sources":["file:///Users/victorhachkajlo/Desktop/new-project/src/app/modules/home/home.module.tsx"],"sourcesContent":["'use client'\nimport { type FC } from 'react'\nimport { UsersListComponent } from '@/app/features/users/users-list'\nimport { SearchFormComponent } from '@/app/features/search'\nimport { useTranslations } from 'next-intl'\n\n// interface\ninterface IProps {\n  searchQuery?: string\n}\n\n// component\nconst HomeModule: FC<Readonly<IProps>> = (props) => {\n  const { searchQuery = '' } = props\n\n  const t = useTranslations()\n\n  // return\n  return (\n    <div className='space-y-6'>\n      <div className='text-center'>\n        <h1 className='text-3xl font-bold text-gray-900'>{t('HomePage.title')}</h1>\n        <p className='mt-2 text-gray-600'>{t('HomePage.description')}</p>\n      </div>\n\n      <div className='flex justify-center'>\n        <SearchFormComponent\n          onSearch={(query) => {\n            console.log('Search query:', query)\n          }}\n          initialValue={searchQuery}\n        />\n      </div>\n\n      <UsersListComponent />\n    </div>\n  )\n}\n\nexport default HomeModule\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AACA;AAAA;AACA;AAJA;;;;;AAWA,YAAY;AACZ,MAAM,aAAmC,CAAC;IACxC,MAAM,EAAE,cAAc,EAAE,EAAE,GAAG;IAE7B,MAAM,IAAI,IAAA,yNAAe;IAEzB,SAAS;IACT,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAoC,EAAE;;;;;;kCACpD,8OAAC;wBAAE,WAAU;kCAAsB,EAAE;;;;;;;;;;;;0BAGvC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,2PAAmB;oBAClB,UAAU,CAAC;wBACT,QAAQ,GAAG,CAAC,iBAAiB;oBAC/B;oBACA,cAAc;;;;;;;;;;;0BAIlB,8OAAC,sPAAkB;;;;;;;;;;;AAGzB;uCAEe","debugId":null}}]
}