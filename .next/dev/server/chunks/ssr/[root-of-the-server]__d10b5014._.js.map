{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/victorhachkajlo/Desktop/new-project/src/app/widgets/header/header.component.tsx"],"sourcesContent":["'use client'\n\nimport { type FC } from 'react'\nimport { useTranslations } from 'next-intl'\nimport Link from 'next/link'\n\n// interface\ninterface IProps {}\n\n// component\nconst HeaderComponent: FC<Readonly<IProps>> = () => {\n  const t = useTranslations()\n\n  // return\n  return (\n    <div className='m-auto mt-3.5 flex w-[1280px] flex-col'>\n      <div className='mx-auto flex w-full items-center justify-between px-4 md:px-6'>\n        <Link href={'/'}>\n          <h1 className='text-4xl'>Book Store</h1>\n        </Link>\n        <nav>\n          <ul className='flex gap-5'>\n            <li className='text-xl'>\n              <Link href={'/'}>{t('navigation.home')}</Link>\n            </li>\n            <li className='text-xl'>\n              <Link href={'/login'}>{t('navigation.login')}</Link>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </div>\n  )\n}\n\nexport default HeaderComponent\n"],"names":[],"mappings":";;;;;AAGA;AACA;AAJA;;;;AASA,YAAY;AACZ,MAAM,kBAAwC;IAC5C,MAAM,IAAI,IAAA,yNAAe;IAEzB,SAAS;IACT,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC,uKAAI;oBAAC,MAAM;8BACV,cAAA,8OAAC;wBAAG,WAAU;kCAAW;;;;;;;;;;;8BAE3B,8OAAC;8BACC,cAAA,8OAAC;wBAAG,WAAU;;0CACZ,8OAAC;gCAAG,WAAU;0CACZ,cAAA,8OAAC,uKAAI;oCAAC,MAAM;8CAAM,EAAE;;;;;;;;;;;0CAEtB,8OAAC;gCAAG,WAAU;0CACZ,cAAA,8OAAC,uKAAI;oCAAC,MAAM;8CAAW,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOvC;uCAEe","debugId":null}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file:///Users/victorhachkajlo/Desktop/new-project/src/pkg/libraries/rest-api/service/rest-api.service.ts"],"sourcesContent":["import { defaultShouldDehydrateQuery, isServer, keepPreviousData, QueryClient } from '@tanstack/react-query'\n\nlet browserQueryClient: QueryClient | undefined = undefined\n\n// make query client\nconst makeQueryClient = () => {\n    return new QueryClient({\n        defaultOptions: {\n            queries: {\n                staleTime: 60 * 1000,\n                networkMode: 'offlineFirst',\n                refetchOnWindowFocus: false,\n                placeholderData: keepPreviousData,\n            },\n            dehydrate: {\n                shouldDehydrateQuery: (query) => {\n                    return defaultShouldDehydrateQuery(query) || query.state.status === 'pending'\n                },\n            },\n        },\n    })\n}\n\n// query client\nexport const getQueryClient = () => {\n    if (isServer) {\n        return makeQueryClient()\n    } else {\n        if (!browserQueryClient) browserQueryClient = makeQueryClient()\n        return browserQueryClient\n    }\n}\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;;AAEA,IAAI,qBAA8C;AAElD,oBAAoB;AACpB,MAAM,kBAAkB;IACpB,OAAO,IAAI,4LAAW,CAAC;QACnB,gBAAgB;YACZ,SAAS;gBACL,WAAW,KAAK;gBAChB,aAAa;gBACb,sBAAsB;gBACtB,iBAAiB,2LAAgB;YACrC;YACA,WAAW;gBACP,sBAAsB,CAAC;oBACnB,OAAO,IAAA,0MAA2B,EAAC,UAAU,MAAM,KAAK,CAAC,MAAM,KAAK;gBACxE;YACJ;QACJ;IACJ;AACJ;AAGO,MAAM,iBAAiB;IAC1B,IAAI,mLAAQ,EAAE;QACV,OAAO;IACX,OAAO;QACH,IAAI,CAAC,oBAAoB,qBAAqB;QAC9C,OAAO;IACX;AACJ","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file:///Users/victorhachkajlo/Desktop/new-project/src/pkg/libraries/rest-api/service/index.ts"],"sourcesContent":["export { getQueryClient } from './rest-api.service'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file:///Users/victorhachkajlo/Desktop/new-project/src/pkg/libraries/rest-api/rest-api.provider.tsx"],"sourcesContent":["'use client'\n\nimport type { FC, ReactNode } from 'react'\nimport { useState } from 'react'\n\nimport { QueryClientProvider } from '@tanstack/react-query'\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools'\n\nimport { getQueryClient } from './service'\n\n// interface\ninterface IProps {\n  children: ReactNode\n}\n\n// component\nconst RestApiProvider: FC<Readonly<IProps>> = (props) => {\n  const { children } = props\n\n  const [queryClient] = useState(() => getQueryClient())\n\n  // return\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n\n      <ReactQueryDevtools initialIsOpen={false} />\n    </QueryClientProvider>\n  )\n}\n\nexport default RestApiProvider\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AACA;AAEA;AAAA;AARA;;;;;;AAeA,YAAY;AACZ,MAAM,kBAAwC,CAAC;IAC7C,MAAM,EAAE,QAAQ,EAAE,GAAG;IAErB,MAAM,CAAC,YAAY,GAAG,IAAA,iNAAQ,EAAC,IAAM,IAAA,6LAAc;IAEnD,SAAS;IACT,qBACE,8OAAC,6MAAmB;QAAC,QAAQ;;YAC1B;0BAED,8OAAC,0MAAkB;gBAAC,eAAe;;;;;;;;;;;;AAGzC;uCAEe","debugId":null}}]
}